library(readxl)
library(data.table)
library(tidyr)
library(ggplot2)
library(viridis)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | grepl("lvef",code))]
View(ukbb)
summary <- ukbb[, .N, by=.(eid,code)]
summary <- complete(summary, eid, code, fill=list(N=0)) |> as.data.table()
summary[, pct := N/sum(N), by=eid]
summary[icd10, desc := i.DESCRIPTION, on=c("code"="ALT_CODE")]
get_lvls <- summary[code!="I501"][order(-pct)]
summary[, `:=`(eid = factor(eid, levels=unique(get_lvls[,eid])),
desc= factor(desc, levels=c("Left ventricular failure",unique(get_lvls[,desc]))))]
summary <- summary[order(eid)]
summary[, facet := .GRP, by=eid][, facet := cut(facet, breaks=seq(0,max(facet),ceiling(max(facet)/25)))]
ggplot(summary, aes(y = desc, x = eid, fill = pct)) +
geom_tile() +
scale_fill_viridis(option = "plasma") +
theme(axis.text.x = element_blank(),
strip.text = element_blank(),
axis.title.y = element_blank(),
legend.position = "top") +
labs(x = paste0("UKBB participant ID (n=", length(unique(summary$eid)), ")"),
fill = "% of codes per LVF+ve (I501) individual")
lvef_cohort <- ukbb[, has_lvef := any(grepl("lvef",code), na.rm = TRUE), by=eid][has_lvef==TRUE]
lvef_cohort[, any_lt50 := any(grepl("lvef",code) & value<50), by=eid]
lvef_cohort <- ukbb[, has_lvef := any(grepl("lvef",code), na.rm = TRUE), by=eid][has_lvef==TRUE]
lvef_cohort[, any_lt50 := any(grepl("lvef",code) & value<50), by=eid]
summary_lvef <- lvef_cohort[, .(any_lt50 = any(grepl("lvef",code) & value<50),
lvef     = min(value[grepl("lvef",code)]),
num_I501 = sum(code=="I501")), by=eid]
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="LVF I501 code occurences", color="LVEF<50%") +
theme(legend.position = "top")
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(dat)
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(dat)
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(dat)
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=700, width=700)
print(p)
dev.off()
}
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 1
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 5) + 1
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 4
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 2
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(HF_IsA                          = "HF_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/hermes_3_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/hermes_3_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/hermes_3_codes/hermes_3_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/hermes_3_codes/hermes_3_metadata.tsv", sep="\t")
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(cohort, Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 2
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(meta)
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 2
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(cohort, Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 2
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(HF_IsA                          = "HF_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/hermes_3_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/hermes_3_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/hermes_3_codes/hermes_3_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/hermes_3_codes/hermes_3_metadata.tsv", sep="\t")
library(data.table)
library(ggplot2)
library(hfphenotyping)
counts <- rbindlist(list("UK Biobank"  = ukbb_counts[, c("code", "code_type", "count")],
"NHS England" = nhs_counts[, c("code", "code_type", "count")],
"BioVU"       = biovu_counts[, c("code", "code_type", "count")]), idcol = "cohort")
counts <- counts[, .(count=sum(count)), by=c("cohort","code","code_type")]
heat_dat <- lapply(split(counts, by="cohort"), function(x) { dat[x, .(concept, Concept, Code, Source, Count = i.count), on = c("Code"="code", "Source"="code_type"), nomatch = NULL]
})|> rbindlist(idcol="cohort")
heat_dat <- heat_dat[order(cohort, Count)][, Code := factor(Code, levels = unique(Code))]
heat_dat[, Source := factor(Source, levels=unique(Source))]
heat_dat[, cohort := factor(cohort, levels=unique(cohort))]
for (con in unique(dat$concept)) {
p <- ggplot(heat_dat[concept==con & Count>10], aes(x=Count, y=Code, fill=log(Count))) +
geom_col(position = position_dodge(width=1)) +
theme_bw(base_size=14) +
theme(legend.position = "none",
axis.text.y = element_text(size=8)) +
facet_wrap(Source~cohort, scales = "free")
fig_height <- round( nrow(heat_dat[concept==con & Count>10]) / 10) + 2
png(paste0("/Users/xx20081/git/heRmes/vignettes/figures/counts_", con, ".png"), height=fig_height*100, width=700)
print(p)
dev.off()
}
pkgdown::build_site()
.Last.error
pkgdown::build_site()
