scale_fill_viridis(option="plasma")
summary[, .N, by=.(dcm_count, mi_count)]
table(summary[, .(dcm_count, mi_count)])
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=N)) +
geom_tile() +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=4, color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=1, color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=2, color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma") +
labs(x = "DCM code count", y = "MI code count", fill = "Num patients") +
theme(legend.text = element_blank())
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma") +
labs(x = "DCM code count", y = "MI code count", fill = "Num patients") +
theme(legend.text = element_blank(),
legend.position = "top")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma", end="0.9") +
labs(x = "DCM code count", y = "MI code count", fill = "Num patients") +
theme(legend.text = element_blank(),
legend.position = "top")
ggplot(complete(summary[, .N, by=.(dcm_count, mi_count)], dcm_count, mi_count, fill=list(N=0)),
aes(x=as.factor(dcm_count), y=as.factor(mi_count), fill=log(N))) +
geom_tile() +
geom_text(aes(label=N), size=3, color="white") +
scale_fill_viridis(option="plasma", end="0.95") +
labs(x = "DCM code count", y = "MI code count", fill = "Num patients") +
theme(legend.text = element_blank(),
legend.position = "top")
library(readxl)
library(data.table)
library(tidyr)
library(ggplot2)
library(viridis)
dcm <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="DCM_IsA", skip=13) |> as.data.table()
mi  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="Myocardial_infarction", skip=13) |> as.data.table()
codes <- rbind(dcm, mi)[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, dcm := grepl("I420", code)]
ukbb[, `:=`(dcm_pt   = any(dcm),
dcm_date = min(date[code=="I420"], na.rm=TRUE)), by=eid]
ukbb <- ukbb[dcm_pt==TRUE & code %in% codes$Code & ((date <= dcm_date & code != "I420") | code == "I420")]
summary <- ukbb[, .(dcm_count = sum(code=="I420"),
mi_count  = sum(code!="I420"),
dcm_pct   = sum(code=="I420") / .N), by=eid]
summary <- summary[order(-mi_count)]
summary[, `:=`(eid = factor(eid, levels=unique(eid)))]
ggplot(summary, aes(x = eid, y = dcm_pct, group = 1)) +
geom_point() +
geom_line(aes(y = mi_count / max(mi_count)), color = "blue") +
geom_hline(yintercept = 1 / (max(summary$mi_count) / max(summary$dcm_pct)), color = "red", linetype = "dashed") +
geom_vline(xintercept = "")
scale_y_continuous(name = "DCM Percentage",
sec.axis = sec_axis(~ . * max(summary$mi_count) / max(summary$dcm_pct),
breaks = seq(0,max(summary$mi_count),10),
labels = seq(0,max(summary$mi_count),10), name = "MI Count")) +
labs(x = "EID") +
theme_minimal()
library(readxl)
library(data.table)
library(tidyr)
library(ggplot2)
library(viridis)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & code %in% codes$Code]
View(ukbb)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | code=="lvef"]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | code=="lvef")]
View(ukbb)
ukbb[, lvef_lt50 := value<50]
View(ukbb)
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | code=="lvef")]
ukbb[code=="lvef", lvef_lt50 := value<50]
View(ukbb)
ukbb[ , lvef_lt50_pt := any(lvef_lt50, na.rm = TRUE), by=eid]
View(ukbb)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | code=="lvef")]
summary <- ukbb[, .N, by=.(eid,code)]
summary <- complete(summary, eid, code, fill=list(N=0)) |> as.data.table()
summary[, pct := N/sum(N), by=eid]
summary[icd10, desc := i.DESCRIPTION, on=c("code"="ALT_CODE")]
get_lvls <- summary[code!="I501"][order(-pct)]
summary[, `:=`(eid = factor(eid, levels=unique(get_lvls[,eid])),
desc= factor(desc, levels=c("Left ventricular failure",unique(get_lvls[,desc]))))]
summary <- summary[order(eid)]
summary[, facet := .GRP, by=eid][, facet := cut(facet, breaks=seq(0,max(facet),ceiling(max(facet)/25)))]
ggplot(summary, aes(y = desc, x = eid, fill = pct)) +
geom_tile() +
scale_fill_viridis(option = "plasma") +
theme(axis.text.x = element_blank(),
strip.text = element_blank(),
axis.title.y = element_blank(),
legend.position = "top") +
labs(x = paste0("UKBB participant ID (n=", length(unique(summary$eid)), ")"),
fill = "% of codes per LVF+ve (I501) individual")
# LVEF
lvef_cohort <- ukbb[code=="lvef", lvef_lt50 := value<50][ , lvef_lt50_pt := any(lvef_lt50, na.rm = TRUE), by=eid][!is.na(lvef_lt50_pt)]
View(lvef_cohort)
# LVEF
lvef_cohort <- ukbb[code=="lvef", lvef_lt50 := value<50][!is.na(lvef_lt50)]
View(lvef_cohort)
# LVEF
lvef_cohort <- ukbb[, has_lvef := any(code=="lvef", na.rm = TRUE), by=eid]
View(lvef_cohort)
# LVEF
lvef_cohort <- ukbb[, has_lvef := any(code=="lvef", na.rm = TRUE), by=eid][has_lvef==TRUE]
View(lvef_cohort)
lvef_cohort[, any_lt50 := any(code=="lvef" & value<50), by=eid]
View(lvef_cohort)
lvef_cohort[, num_I501 := sum(code=="I501"), by=eid]
View(lvef_cohort)
summary_lvef <- lvef_cohort[, .N, by=c("num_I501","any_lt50")]
View(summary_lvef)
lvef_cohort <- ukbb[, has_lvef := any(code=="lvef", na.rm = TRUE), by=eid][has_lvef==TRUE]
# lvef_cohort[, any_lt50 := any(code=="lvef" & value<50), by=eid]
summary_lvef <- lvef_cohort[, `:=`(any_lt50 = any(code=="lvef" & value<50),
num_I501 = sum(code=="I501")), by=eid]
View(summary_lvef)
# lvef_cohort[, any_lt50 := any(code=="lvef" & value<50), by=eid]
summary_lvef <- lvef_cohort[, .(any_lt50 = any(code=="lvef" & value<50),
num_I501 = sum(code=="I501")), by=eid]
View(summary_lvef)
summary_lvef[, sum(num_I501), by=any_lt50)]
summary_lvef[, sum(num_I501), by=any_lt50]
lvef_cohort <- ukbb[, has_lvef := any(code=="lvef", na.rm = TRUE), by=eid][has_lvef==TRUE]
# lvef_cohort[, any_lt50 := any(code=="lvef" & value<50), by=eid]
summary_lvef <- lvef_cohort[, .(any_lt50 = any(code=="lvef" & value<50),
lvef     = value[code=="lvef"],
num_I501 = sum(code=="I501")), by=eid]
View(summary_lvef)
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point()
ggplot(summary_lvef[order()], aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_col()
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_col()
ggplot(summary_lvef[order(lvef)], aes(x=eid, y=num_I501, color=any_lt50)) +
geom_col()
ggplot(summary_lvef[order(lvef)], aes(x=as.factor(eid), y=num_I501, color=any_lt50)) +
geom_col()
ggplot(summary_lvef[order(lvef)], aes(x=as.factor(eid), y=num_I501, fill=any_lt50)) +
geom_col()
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point()
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="Num LVF I501 codes")
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="Num LVF I501 codes", color="LVEF<50%")
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="Num LVF I501 codes", color="LVEF<50%") +
theme(legend.position = "top")
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="LVF I501 code occurences", color="LVEF<50%") +
theme(legend.position = "top")
items_file    <- "/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_items.gz"
hes_file      <- "/Users/xx20081/Desktop/hesin.txt"
hes_diag_file <- "/Users/xx20081/Desktop/hesin_diag.txt"
out_file      <- "/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz"
library(data.table)
library(lubridate)
# read in the UKBB items
items <- fread(items_file)
# define the cohort
cohort <- items[, list(eid             = eid,
dob             = ymd(paste0(year_of_birth_1, "-", month_of_birth_1, "-", "1")),
sex_male        = as.numeric(sex_1),
sbp             = sbp_1,
hr              = hr_1,
alcohol_intake  = as.numeric(alcohol_intake_1),
ever_smoked     = as.numeric(ever_smoked_1),
assessment_date = as_date(assessment_date_1),
assessment_age  = assessment_age_1,
bmi             = as.numeric(bmi_1),
waist_circ      = as.numeric(waist_circ_1),
hip_circ        = as.numeric(hip_circ_1),
lvef1           = as.numeric(lvef_1),
lvef2           = as.numeric(lvef_2))]
# check date of birth
if (any(is.na(cohort$dob))) {
message(paste("unable to parse", sum(is.na(cohort$dob)), "date of birth elements - estimating from age at assessment..."))
cohort[is.na(cohort$dob), dob :=  `%m-%`(as.Date(assessment_date), years(assessment_age))]
if (any(is.na(cohort$dob))) stop("failed to calculate some date of births")
if (any(cohort$dob > as.Date("1972-01-01"))) stop("some ages / dob indicate cohort age <37, need to check as UKBB didn't recruit younger adults")
}
# get the date of each self reported illness code
self_rep_code_cols <- grep("^non_cancer_illness_code_self_reported", names(items), value = TRUE)
self_rep_year_age_cols <- grep("^non_cancer_illness_code_(year|age)", names(items), value = TRUE)
items[, (self_rep_code_cols) := lapply(.SD, as.character), .SDcols = self_rep_code_cols]
items[, (self_rep_year_age_cols) := lapply(.SD, as.numeric), .SDcols = self_rep_year_age_cols]
self_rep_illness <- data.table::melt(items,
id.vars = "eid",
measure = patterns("^non_cancer_illness_code_self_reported", "^non_cancer_illness_code_year", "^non_cancer_illness_code_age"),
variable.name = "element",
value.name = c("code", "year", "age"),
na.rm = TRUE
)
# get the date of each self reported cancer code
self_rep_code_cols <- grep("^cancer_illness_code", names(items), value = TRUE)
self_rep_year_age_cols <- grep("^cancer_illness_code_(year|age)", names(items), value = TRUE)
items[, (self_rep_code_cols) := lapply(.SD, as.character), .SDcols = self_rep_code_cols]
items[, (self_rep_year_age_cols) := lapply(.SD, as.numeric), .SDcols = self_rep_year_age_cols]
self_rep_cancer <- data.table::melt(items,
id.vars = "eid",
measure = patterns("^cancer_illness_code", "^cancer_illness_code_year", "^cancer_illness_code_age"),
variable.name = "element",
value.name = c("code", "year", "age"),
na.rm = TRUE
)
# combined
self_rep_illness <- data.table::rbindlist(
list(ukbb_self_reported_illness = self_rep_illness,
ukbb_self_reported_cancer  = self_rep_cancer),
idcol = "code_type"
)
# deal with unknown time of disease - could set to just before assessment if only looking at post assessment time period
# just remove for now (small numbers of HF n=8)
self_rep_illness <- self_rep_illness[age != -1 & age != -3] # unknown / prefer not to answer
self_rep_illness[, date := lubridate::ymd(paste0(as.character(floor(year)), "-01-01")) + lubridate::days(as.integer(365.25 * (year - floor(year))))]
self_rep_illness[, c("year", "element") := NULL]
self_rep_illness[, code := as.character(code)]
# check self report illness table
if (any(is.na(self_rep_illness$date))) {
message(paste("unable to parse", sum(is.na(self_rep_illness$date)), "dates for self-reported illness codes --> removing"))
self_rep_illness <- self_rep_illness[!is.na(date), ]
}
if (any(self_rep_illness$date < as.Date("1900-01-01"))) {
stop("are you sure something happened before 1900?")
}
if (any(self_rep_illness$age < 0 | self_rep_illness$age > 100)) {
stop("likely error with ages of self reported illness")
}
# get the inpatient diagnosis codes, age, and date
hes <- data.table::fread(hes_file)[is.na(epistart) | epistart == "", epistart := admidate]
diag <- data.table::fread(hes_diag_file)
diag[hes, date := lubridate::dmy(i.epistart), on = c("eid", "ins_index")]
diag[items, c("assessment_date", "assessment_age") := list(lubridate::as_date(i.assessment_date_1), i.assessment_age_1), on = "eid"]
diag[, age := assessment_age + as.numeric(difftime(date, assessment_date, units = "days") / 365.25)]
diag[diag_icd9 == "", diag_icd9 := NA_character_]
diag[diag_icd10 == "", diag_icd10 := NA_character_]
diag <- data.table::melt(diag,
id.vars = c("eid", "date", "age"),
measure.vars  = c("diag_icd9", "diag_icd10"),
variable.name = "code_type",
value.name = "code",
na.rm = TRUE)
diag[, code_type := data.table::fcase(code_type == "diag_icd9", "icd9",
code_type == "diag_icd10", "icd10")]
# bind together the diagnostic codes
combined <- rbind(self_rep_illness, diag)
# add the value
combined[, value := 1L]
cohort <- data.table::melt(cohort,
id.vars       = c("eid", "assessment_date", "assessment_age"),
measure.vars  = c("sex_male", "sbp", "hr", "alcohol_intake", "ever_smoked", "bmi", "waist_circ", "hip_circ", "lvef1", "lvef2"),
variable.name = "code",
value.name    = "value",
na.rm         = TRUE)
cohort[, code_type := "demog"]
# add the other data
combined <- rbind(combined,
cohort[, .(eid,
date = assessment_date,
age = assessment_age,
code_type,
code,
value)]) #
# save
data.table::fwrite(combined, out_file, sep = "\t")
library(readxl)
library(data.table)
library(tidyr)
library(ggplot2)
library(viridis)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | grepl("lvef",code))]
summary <- ukbb[, .N, by=.(eid,code)]
summary <- complete(summary, eid, code, fill=list(N=0)) |> as.data.table()
summary[, pct := N/sum(N), by=eid]
summary[icd10, desc := i.DESCRIPTION, on=c("code"="ALT_CODE")]
get_lvls <- summary[code!="I501"][order(-pct)]
summary[, `:=`(eid = factor(eid, levels=unique(get_lvls[,eid])),
desc= factor(desc, levels=c("Left ventricular failure",unique(get_lvls[,desc]))))]
summary <- summary[order(eid)]
summary[, facet := .GRP, by=eid][, facet := cut(facet, breaks=seq(0,max(facet),ceiling(max(facet)/25)))]
ggplot(summary, aes(y = desc, x = eid, fill = pct)) +
geom_tile() +
scale_fill_viridis(option = "plasma") +
theme(axis.text.x = element_blank(),
strip.text = element_blank(),
axis.title.y = element_blank(),
legend.position = "top") +
labs(x = paste0("UKBB participant ID (n=", length(unique(summary$eid)), ")"),
fill = "% of codes per LVF+ve (I501) individual")
View(lvef_cohort)
library(readxl)
library(data.table)
library(tidyr)
library(ggplot2)
library(viridis)
cmp <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="CMP_AssociatedWith", skip=13) |> as.data.table()
hf  <- read_xlsx("/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx", sheet="HF_IsA", skip=13) |> as.data.table()
codes <- rbind(cmp, hf[Code=="I501"])[Source=="ICD10" & !is.na(Concensus)]
ukbb <- fread("/Users/xx20081/Desktop/hf_mvmr/output/tables/ukbb_individual_codes.gz")
icd10 <- fread("/Users/xx20081/Library/CloudStorage/OneDrive-UniversityofBristol/phenotyping/ICD10_Edition5_20160401/Content/ICD10_Edition5_CodesAndTitlesAndMetadata_GB_20160401.txt")
ukbb[, lvf := grepl("I420", code)]
ukbb[, lvf_pt := any(lvf, na.rm=T), by=eid]
ukbb <- ukbb[lvf_pt==TRUE & (code %in% codes$Code | grepl("lvef",code))]
View(ukbb)
summary <- ukbb[, .N, by=.(eid,code)]
summary <- complete(summary, eid, code, fill=list(N=0)) |> as.data.table()
summary[, pct := N/sum(N), by=eid]
summary[icd10, desc := i.DESCRIPTION, on=c("code"="ALT_CODE")]
get_lvls <- summary[code!="I501"][order(-pct)]
summary[, `:=`(eid = factor(eid, levels=unique(get_lvls[,eid])),
desc= factor(desc, levels=c("Left ventricular failure",unique(get_lvls[,desc]))))]
summary <- summary[order(eid)]
summary[, facet := .GRP, by=eid][, facet := cut(facet, breaks=seq(0,max(facet),ceiling(max(facet)/25)))]
ggplot(summary, aes(y = desc, x = eid, fill = pct)) +
geom_tile() +
scale_fill_viridis(option = "plasma") +
theme(axis.text.x = element_blank(),
strip.text = element_blank(),
axis.title.y = element_blank(),
legend.position = "top") +
labs(x = paste0("UKBB participant ID (n=", length(unique(summary$eid)), ")"),
fill = "% of codes per LVF+ve (I501) individual")
lvef_cohort <- ukbb[, has_lvef := any(grepl("lvef",code), na.rm = TRUE), by=eid][has_lvef==TRUE]
lvef_cohort[, any_lt50 := any(grepl("lvef",code) & value<50), by=eid]
lvef_cohort <- ukbb[, has_lvef := any(grepl("lvef",code), na.rm = TRUE), by=eid][has_lvef==TRUE]
lvef_cohort[, any_lt50 := any(grepl("lvef",code) & value<50), by=eid]
summary_lvef <- lvef_cohort[, .(any_lt50 = any(grepl("lvef",code) & value<50),
lvef     = min(value[grepl("lvef",code)]),
num_I501 = sum(code=="I501")), by=eid]
ggplot(summary_lvef, aes(x=lvef, y=num_I501, color=any_lt50)) +
geom_point() +
labs(x="LVEF", y="LVF I501 code occurences", color="LVEF<50%") +
theme(legend.position = "top")
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(dat)
library(heRmes)
library(readxl)
library(data.table)
library(glue)
library(irr)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
DCM_AssociatedWith              = "DCM_AssociatedWith",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure",
RCM_IsA                         = "RCM_IsA",
HCM_IsA                         = "HCM_IsA")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
dat <- dat[Concensus==1 & Source != "SNOMED"]
dat[, agreement := rowSums(.SD)/4, .SDcols = c("QW","RTL","NS","LL")]
dat[meta, Concept := i.Title, on="concept"]
fwrite(dat, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_codes_dat.tsv", sep="\t")
fwrite(meta, "/Users/xx20081/git/heRmes/vignettes/figures/cardiomyopathy_metadata_dat.tsv", sep="\t")
fwrite(dat[, .(Concept, Code, Source, Description)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_codes.tsv", sep="\t")
fwrite(meta[, .(Concept=Title, Definition, Reference, Terminologies, `Search expressions`)], "/Users/xx20081/git/heRmes/inst/extdata/nih_cardiomyopathy_codes/cardiomyopathy_metadata.tsv", sep="\t")
View(dat)
