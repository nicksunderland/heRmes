grepl("(?i)^PAR$", get(args$gwas_chr)), 25,
grepl("(?i)^MT$",  get(args$gwas_chr)), 26,
default = NA_integer_)]
gwas[, (args$gwas_chr) := fcase(as.integer(get(args$gwas_chr)) %in% 1:26, as.integer(get(args$gwas_chr)),
grepl("(?i)^X$",   get(args$gwas_chr)), 23,
grepl("(?i)^Y$",   get(args$gwas_chr)), 24,
grepl("(?i)^PAR$", get(args$gwas_chr)), 25,
grepl("(?i)^MT$",  get(args$gwas_chr)), 26,
default = NA_integer_)]
gwas[, (args$gwas_chr) := as.integer(get(args$gwas_chr))]
gwas[, (args$gwas_chr) := fcase(as.integer(get(args$gwas_chr)) %in% 1:26, as.integer(get(args$gwas_chr)),
grepl("(?i)^X$",   get(args$gwas_chr)), 23,
grepl("(?i)^Y$",   get(args$gwas_chr)), 24,
grepl("(?i)^PAR$", get(args$gwas_chr)), 25,
grepl("(?i)^MT$",  get(args$gwas_chr)), 26,
default = NA_integer_)]
.Machine$double.xmin
# chromsome
gwas[, (args$gwas_chr) := fcase(as.integer(get(args$gwas_chr)) %in% 1:26, as.integer(get(args$gwas_chr)),
grepl("(?i)^X$",   get(args$gwas_chr)), 23L,
grepl("(?i)^Y$",   get(args$gwas_chr)), 24L,
grepl("(?i)^PAR$", get(args$gwas_chr)), 25L,
grepl("(?i)^MT$",  get(args$gwas_chr)), 26L,
default = NA_integer_)]
# base position and n-sample
integer_cols <- c(args$gwas_bp, args$gwas_n)
gwas[, (integer_cols) := lapply(.SD, as.integer), .SDcols = integer_cols]
# frequency, beta, se, p, info
numeric_cols <- c(args$gwas_eaf, args$gwas_beta, args$gwas_se, args$gwas_p, args$gwas_info)
gwas[, (numeric_cols) := lapply(.SD, as.numeric), .SDcols = numeric_cols]
gwas[get(args$gwas_eaf) < 0 | get(args$gwas_eaf) > 1, (args$gwas_eaf) := NA_real_]
gwas[is.infinite(get(args$gwas_beta)), (args$gwas_beta) := NA_real_]
gwas[is.infinite(get(args$gwas_se)) | get(args$gwas_se) <= 0, (args$gwas_se) := NA_real_]
gwas[, (args$gwas_p) := fcase(get(args$gwas_p) == 0, .Machine$double.xmin,
get(args$gwas_p) > 0 & get(args$gwas_p) <= 1, get(args$gwas_p),
default = NA_real_)]
gwas[get(args$gwas_info) < 0 | get(args$gwas_info) > 1, (args$gwas_info) := NA_real_]
# alleles
gwas[, c(args$gwas_ea, args$gwas_oa) := lapply(.SD, as.character), .SDcols = c(args$gwas_ea, args$gwas_oa)]
gwas[, (args$gwas_ea) := ifelse(grepl("^[ACTG]+$|^[DI]$", get(args$gwas_ea)), toupper(get(args$gwas_ea)), NA_character_)]
gwas[, (args$gwas_oa) := ifelse(grepl("^[ACTG]+$|^[DI]$", get(args$gwas_oa)), toupper(get(args$gwas_oa)), NA_character_)]
postfix_na_summary <- gwas[, lapply(.SD, function(col) c(num = .N, num_na = sum(is.na(col)), pct_na = 100 * (sum(is.na(col)) / .N))), .SDcols = gwas_cols]
summary <- cbind(summary,
data.table(postfix_num      = as.integer(sapply(postfix_na_summary, `[[`, 1)),
postfix_num_na   = as.integer(sapply(postfix_na_summary, `[[`, 2)),
postfix_pct_na   = sapply(postfix_na_summary, `[[`, 3)))
cli_process_done()
print(summary)
postfix_na_summary <- gwas[, lapply(.SD, function(col) c(postfix_valid = sum(!is.na(col)), pct_na = 100 * (sum(!is.na(col)) / .N))), .SDcols = gwas_cols]
postfix_na_summary
postfix_na_summary <- gwas[, lapply(.SD, function(col) c(postfix_valid = sum(!is.na(col)), pct_na = 100 * (sum(!is.na(col)) / .N))), .SDcols = gwas_cols]
summary <- cbind(summary,
data.table(postfix_valid     = as.integer(sapply(postfix_na_summary, `[[`, 1)),
postfix_valid_pct = sapply(postfix_na_summary, `[[`, 1)))
cli_process_done()
print(summary)
postfix_na_summary <- gwas[, lapply(.SD, function(col) c(postfix_valid = sum(!is.na(col)), pct_na = 100 * (sum(!is.na(col)) / .N))), .SDcols = gwas_cols]
summary <- cbind(summary,
data.table(postfix_valid     = as.integer(sapply(postfix_na_summary, `[[`, 1)),
postfix_valid_pct = sapply(postfix_na_summary, `[[`, 2)))
cli_process_done()
print(summary)
gwas[ stats::complete.cases(gwas[mget(gwas_cols)]) ]
gwas[mget(gwas_cols)]
gwas[ stats::complete.cases(gwas[, mget(gwas_cols)]) ]
gwas[, info:= 1]
# remove invalid
gwas <- gwas[ stats::complete.cases(gwas[, mget(gwas_cols)]) ]
h <- genepi.utils::harmonise_gwas(gwas, ref, join = "chr:bp", action = 2,
gmap = c(chr = args$gwas_chr, bp = args$gwas_bp, ea = args$gwas_ea, oa = args$gwas_oa, eaf = args$gwas_eaf, beta = args$gwas_beta),
rmap = c(chr = args$ref_chr, bp = args$ref_bp, ea = args$ref_ea, oa = args$ref_oa, eaf = args$ref_eaf))
# harmonisation summary
summary[, harmonised := nrow(h)]
cli_process_done()
print(summary)
# harmonisation summary
summary[, `:=`(harmonised = nrow(h), harmonised_pct = 100*(nrow(h)/num[1]))]
print(summary)
args$freq_diff= 0.2
paste0("freq_diff_lt", args$freq_diff)
diff_col <- paste0("freq_diff_lt", args$freq_diff)
summary[, c(diff_col, paste0(diff_col, "_pct")) := .(sum(freq_diff < args$freq_diff), 100*(sum(freq_diff < args$freq_diff)/num[1]))]
# absolute frequency difference
h[, freq_diff := abs(eaf - eaf_ref)]
diff_col <- paste0("freq_diff_lt", args$freq_diff)
summary[, c(diff_col, paste0(diff_col, "_pct")) := .(sum(freq_diff < args$freq_diff), 100*(sum(freq_diff < args$freq_diff)/num[1]))]
summary[, c(diff_col, paste0(diff_col, "_pct")) := .(sum(get(freq_diff) < args$freq_diff), 100*(sum(get(freq_diff) < args$freq_diff)/num[1]))]
summary[, c(diff_col, paste0(diff_col, "_pct")) := .(sum(h$freq_diff < args$freq_diff), 100*(sum(h$freq_diff < args$freq_diff)/num[1]))]
summary
suppressPackageStartupMessages(library(ggplot2))
h[freq_diff > args$freq_diff]
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf)) +
geom_point()
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf)) +
geom_point() +
geom_abline(slope = 1, intercept = args$freq_diff, linetype = "dashed", color = "red")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2()
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(midpoint = 0.5)
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(low = 0, midpoint = 0.5, high = 1)
?scale_color_gradient2
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(midpoint = 0.5, limits = c(0,1))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(high = muted("red"), low = muted("blue"), midpoint = 0.5, limits = c(0,1))
scales::muted("red")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(high = scales::muted("red"), low = scales::muted("blue"), midpoint = 0.5, limits = c(0,1))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(high = scales::muted("red"), mid = scales::muted("lightblue"), low = scales::muted("blue"), midpoint = 0.5, limits = c(0,1))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(high = scales::muted("red"), mid = scales::muted("lightyellow"), low = scales::muted("blue"), midpoint = 0.5, limits = c(0,1))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
scale_color_gradient2(high = scales::muted("red"), mid = scales::muted("yellow"), low = scales::muted("blue"), midpoint = 0.5, limits = c(0,1))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis()
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "magma")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako")
suppressPackageStartupMessages(library(viridis))
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_bw() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped = TRUE], color = "red") +
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 21, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "red circles flipped alleles") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "red") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "yellow") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "purple") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "purple") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles, purple triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 21, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "purple") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles, purple triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 23, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "purple") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles, purple triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 23, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "magenta") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles, purple triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red circles flipped alleles, purple triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
#theme_minimal() +
theme(legend.position = "none")
# plot
ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
theme_minimal() +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
args$output= "/Users/xx20081/Desktop/qc_tests"
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff, size = 3)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange") +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red") +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange circles flipped alleles, red triangle strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff, size = 2)) +
geom_point() +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange", size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red", size = 3) +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange triangles flipped alleles, red triangles strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point(size = 2) +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange", size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red", size = 3) +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange triangles flipped alleles, red triangles strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
# plot
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point(size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 24, color = "orange", size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red", size = 3) +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*orange triangles flipped alleles, red triangles strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point(size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & strand_flip == TRUE], shape = 25, color = "red", size = 3) +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red triangles strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
# save
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
eaf_plot <- ggplot(h[freq_diff > args$freq_diff], aes(x = eaf_ref, y = eaf, color = freq_diff)) +
geom_point(size = 3) +
geom_point(data = h[freq_diff > args$freq_diff & flipped == TRUE], shape = 17, color = "red", size = 3) +
geom_abline(slope = 1, intercept =  args$freq_diff, linetype = "dashed", color = "red") +
geom_abline(slope = 1, intercept = -args$freq_diff, linetype = "dashed", color = "red") +
viridis::scale_colour_viridis(option = "mako") +
labs(x = "Reference allele frequency", y = "Cohort allele frequency",
caption = "*red triangles strand flip") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
# save
grDevices::png(file.path(args$output, "eaf_plot.png"), width = 600, height = 600)
print(eaf_plot)
grDevices::dev.off()
h[, mget(names(gwas_cols))]
gwas_cols
h[, .SD, .SDcols = gwas_cols]
# extract the data back into gwas format
gwas <- h[, .SD, .SDcols = gwas_cols]
use_vignette("hermes_qc_script")
?read_chunk
pkgdown::build_site()
use_package("argparse")
grep("foo", c("foo", "bar"))
grep("foo", c("foo", "bar", "foo"))
library(data.table)
g <- fread('/Users/xx20081/Desktop/meta.all.allcause_death.autosomes.tsv')
g[,info:=1]
fwrite(g, '/Users/xx20081/Desktop/meta.all.allcause_death.autosomes.tsv', sep = "\t")
