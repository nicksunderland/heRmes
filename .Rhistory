gsub      = list("\\.", "", c("x")),
name      = "Heart Failure")
pheno[]
update_library(search_terms = c("heart failure", "cardiomyopathy", "myocardial infarction"))
chr11 <- data.table::fread("/Users/xx20081/Documents/local_data/gtex_v8/gtex_v8_chr11.tsv.gz")
P2X3 <- chr11[grepl("P2", GENE_NAME),]
View(P2X3)
P2X3 <- chr11[grepl("^P2", GENE_NAME),]
P2X3 <- chr11[grepl("^P2RX3", GENE_NAME),]
chr11 <- data.table::fread("/Users/xx20081/Downloads/GTEx_Analysis_v8_eQTL_EUR/eqtls/Heart_Left_Ventricle.v8.EUR.signif_pairs.txt.gz")
View(chr11)
chr11[, pos := sub("chr11-([0-9]+)_", "\\1")]
chr11[, pos := sub("chr11-([0-9]+)_", "\\1", variant_id)]
chr11[, pos := sub("chr11-([0-9]+)_", "//1", variant_id)]
View(chr11)
chr11[, pos := sub("chr11_([0-9]+)_", "//1", variant_id)]
View(chr11)
chr11[, pos := sub("chr11_([0-9]+)_", "\\1", variant_id)]
View(chr11)
chr11[, pos := sub("chr11_([0-9]+)_.*", "\\1", variant_id)]
chr11[, pos := as.integer(sub("chr11_([0-9]+)_.*", "\\1", variant_id))]
View(chr11)
p2rx3 <- chr11[pos>57335950 & pos<57372396]
View(p2rx3)
hf <- data.table::fread("/Users/xx20081/Documents/local_data/hermes_incidence/raw/Pheno1_ALL/FORMAT-METAL_Pheno1_ALL.tsv.gz")
p2rx3[, chr:= "11"]
p2rx3[, oa := sub("chr11_[0-9]+_(.*?)_.*", "\\1", variant_id)]
p2rx3[, oa := sub("chr11_[0-9]+_(.*?)_(.*?).*", "\\2", variant_id)]
View(chr11)
View(p2rx3)
p2rx3[, oa := sub("chr11_[0-9]+_(.*?)_.*", "\\1", variant_id)]
p2rx3[, ea := sub("chr11_[0-9]+_(.*?)_.*", "\\2", variant_id)]
p2rx3[, ea := sub("chr11_[0-9]+_(.*?)_(.*)_.*", "\\2", variant_id)]
View(p2rx3)
p2rx3 <- genepi.utils::lift()
?genepi.utils::lift()
p2rx3 <- genepi.utils::lift(p2rx3, from="Hg38", to="Hg19", chr_col = "chr", pos_col = "pos", ea_col = "ea", oa_col = "oa")
View(p2rx3)
p2rx3[hf, rsid := i.rsID, on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
hf[, chr:=as.character(chr)]
p2rx3[hf, rsid := i.rsID, on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
p2rx3[hf, c("rsid", "flip") := list(i.rsID, TRUE), on = c("chr"="chr", "pos"="pos_b37", "ea"="A2", oa="A1")]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf") := list(i.rsID, i.A1_freq, i.A1_beta, i.se), on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf") := list(i.rsID, 1-i.A1_freq, i.A1_beta*-1, i.se), on = c("chr"="chr", "pos"="pos_b37", "ea"="A0", oa="A1")]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf") := list(i.rsID, 1-i.A1_freq, i.A1_beta*-1, i.se), on = c("chr"="chr", "pos"="pos_b37", "ea"="A2", oa="A1")]
View(p2rx3)
exp = TwoSampleMR::format_data(p2rx3, )
?TwoSampleMR::format_data
exp = TwoSampleMR::format_data(p2rx3, type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "pval_nominal")
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "pval_nominal")
out = TwoSampleMR::format_data(as.data.frame(p2rx3), type = "outcome", snp_col = "rsid", beta_col = "beta_hf", se_col = "se_hf", eaf_col = "eaf_hf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "pval_nominal")
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf", "p_hf") := list(i.rsID, i.A1_freq, i.A1_beta, i.se, i.pval), on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf", "p_hf") := list(i.rsID, 1-i.A1_freq, i.A1_beta*-1, i.se, i.pval), on = c("chr"="chr", "pos"="pos_b37", "ea"="A2", oa="A1")]
View(p2rx3)
out = TwoSampleMR::format_data(as.data.frame(p2rx3), type = "outcome", snp_col = "rsid", beta_col = "beta_hf", se_col = "se_hf", eaf_col = "eaf_hf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p_hf")
View(out)
h <- TwoSampleMR::harmonise_data(exp, out)
r <- TwoSampleMR::mr(h)
r
TwoSampleMR::mr_scatter_plot(r)
TwoSampleMR::mr_scatter_plot(r, h)
?genepi.utils::clump
data.table::setnames(p2rx3, c("p"), c("pval_nominal"))
data.table::setnames(p2rx3, c("pval_nominal"), c("p"))
clumped <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.001, kb=250)
View(clumped)
clumped <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.1, kb=250)
View(clumped)
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), snps = c("rs11229011"), type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "pval_nominal")
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), snps = c("rs11229011"), type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p")
h <- TwoSampleMR::harmonise_data(exp, out)
r <- TwoSampleMR::mr(h)
TwoSampleMR::mr_scatter_plot(r, h)
r
tibnerve <- data.table::fread("/Users/xx20081/Downloads/GTEx_Analysis_v8_eQTL_EUR/eqtls/Nerve_Tibial.v8.EUR.signif_pairs.txt.gz")
tibnerve <- data.table::fread("/Users/xx20081/Downloads/GTEx_Analysis_v8_eQTL_EUR/eqtls/Nerve_Tibial.v8.EUR.signif_pairs.txt.gz")
tibnerve[, pos := as.integer(sub("chr11-([0-9]+)_.*", "\\1", variant_id))]
p2rx3 <- chr11[pos>57335950 & pos<57372396]
p2rx3 <- tibnerve[pos>57335950 & pos<57372396]
p2rx3[, chr:= "11"]
View(tibnerve)
tibnerve <- tibnerve[grepl("^chr11", variant_id)]
tibnerve[, pos := as.integer(sub("chr11_([0-9]+)_.*", "\\1", variant_id))]
View(tibnerve)
p2rx3 <- tibnerve[pos>57335950 & pos<57372396]
p2rx3[, chr:= "11"]
p2rx3[, chr:= "11"]
p2rx3[, oa := sub("chr11_[0-9]+_(.*?)_.*", "\\1", variant_id)]
p2rx3[, ea := sub("chr11_[0-9]+_(.*?)_(.*)_.*", "\\2", variant_id)]
View(p2rx3)
p2rx3 <- genepi.utils::lift(p2rx3, from="Hg38", to="Hg19", chr_col = "chr", pos_col = "pos", ea_col = "ea", oa_col = "oa")
hf[, chr:=as.character(chr)]
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.1, kb=250)
data.table::setnames(p2rx3, c("pval_nominal"), c("p"))
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.1, kb=250)
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf", "p_hf") := list(i.rsID, i.A1_freq, i.A1_beta, i.se, i.pval), on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
hf <- data.table::fread("/Users/xx20081/Documents/local_data/hermes_incidence/raw/Pheno1_ALL/FORMAT-METAL_Pheno1_ALL.tsv.gz")
hf[, chr:=as.character(chr)]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf", "p_hf") := list(i.rsID, i.A1_freq, i.A1_beta, i.se, i.pval), on = c("chr"="chr", "pos"="pos_b37", "ea"="A1", oa="A2")]
p2rx3[hf, c("rsid", "eaf_hf", "beta_hf", "se_hf", "p_hf") := list(i.rsID, 1-i.A1_freq, i.A1_beta*-1, i.se, i.pval), on = c("chr"="chr", "pos"="pos_b37", "ea"="A2", oa="A1")]
View(p2rx3)
data.table::setnames(p2rx3, c("pval_nominal"), c("p"))
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.1, kb=250)
View(p2rx3)
p2rx3$rsid[p2rx3$clump==TRUE]
p2rx3$rsid
p2rx3$clump
p2rx3$index==TRUE
p2rx3$rsid[p2rx3$index==TRUE]
p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE]
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), snps = p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE] type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p")
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), snps = p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE], type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p")
out = TwoSampleMR::format_data(as.data.frame(p2rx3), type = "outcome", snp_col = "rsid", beta_col = "beta_hf", se_col = "se_hf", eaf_col = "eaf_hf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p_hf")
h <- TwoSampleMR::harmonise_data(exp, out)
r <- TwoSampleMR::mr(h)
r
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.3, kb=250)
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.5, kb=250)
p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE]
View(p2rx3)
p2rx3[,index:=NULL]
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.5, kb=250)
View(p2rx3)
p2rx3[,index:=NULL]
p2rx3[,clump:=NULL]
p2rx3 <- genepi.utils::clump(p2rx3, p1=5e-8, p2=1, r2=0.5, kb=250)
View(p2rx3)
p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE]
exp = TwoSampleMR::format_data(as.data.frame(p2rx3), snps = p2rx3$rsid[!is.na(p2rx3$index) & p2rx3$index==TRUE], type = "exposure", snp_col = "rsid", beta_col = "slope", se_col = "slope_se", eaf_col = "maf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p")
out = TwoSampleMR::format_data(as.data.frame(p2rx3), type = "outcome", snp_col = "rsid", beta_col = "beta_hf", se_col = "se_hf", eaf_col = "eaf_hf", effect_allele_col = "ea", other_allele_col = "oa", pval_col = "p_hf")
h <- TwoSampleMR::harmonise_data(exp, out)
r <- TwoSampleMR::mr(h)
r
TwoSampleMR::mr_scatter_plot(r,h)
# -------------------
# Step 1 - the Knowledge Portal column names
# -------------------
example <- data.table::fread("/Users/xx20081/Desktop/hermes_pheno1_eur_harmonised.gz")
library(devtools)
use_vignette("nih_cardiomyopathy")
library(heRmes)
library(readxl)
library(data.table)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- c("DCM_IsA", "LVSD_IsA")
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x)) |> rbindlist(idcol="concept")
?read_xlsx
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
library(heRmes)
library(readxl)
library(data.table)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- c("DCM_IsA", "LVSD_IsA")
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
View(dat_lst)
View(dat_lst)
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
dat_lst[, lapply(.SD, is.na), .SDcols = c("QW","RTL","NS","LL","Concensus")]
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
dat_lst[, lapply(.SD, as.numeric(!is.na)), .SDcols = c("QW","RTL","NS","LL","Concensus")]
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
dat_lst[, lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = c("QW","RTL","NS","LL","Concensus")]
View(dat_lst)
dat_lst[, `:=`.(lapply(.SD, function(x) as.numeric(!is.na(x)))), .SDcols = c("QW","RTL","NS","LL","Concensus")]
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
dat_lst[, `:=`(lapply(.SD, function(x) as.numeric(!is.na(x)))), .SDcols = c("QW","RTL","NS","LL","Concensus")]
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat_lst[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
View(dat_lst)
tabs <- list(DCM_IsA  = "DCM_IsA",
LVSD_IsA = "LVSD_IsA")
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat_lst[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
View(dat_lst)
dput(excel_sheets(file))
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat_lst[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
dat_lst <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat_lst[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
View(dat_lst)
dat_lst[403,2]
?read_xlsx
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
View(dat)
seq(3)
library(heRmes)
library(readxl)
library(data.table)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
template <- "## This is section %s
Section data is `%0.2f`.
Additional section text is: %s.
"
for (i in seq_along(unique(dat$concept))) {
d0 <- dat[concept==i, ]
cat(sprintf(template, d0$concept[1], d0$Descriptionp[1], d0$Source[1]))
}
template <- "## This is section %s
Section data is `%0.2f`.
Additional section text is: %s.
"
for (i in seq_along(unique(dat$concept))) {
d0 <- dat[concept==i, ]
print(sprintf(template, d0$concept[1], d0$Descriptionp[1], d0$Source[1]))
}
i=1
d0 <- dat[concept==i, ]
con=unique(dat$concept)[[1]]
d0 <- dat[concept==con, ]
d0$concept[1]
cat(sprintf(template, d0$concept[1], d0$Descriptionp[1], d0$Source[1]))
sprintf(template, d0$concept[1], d0$Descriptionp[1], d0$Source[1])
template <- "## This is section %s
Section data is `%0.2f`.
Additional section text is: %s.
"
sprintf(template, d0$concept[1], d0$Descriptionp[1], d0$Source[1])
d0$Descriptionp[1]
d0$Description[1]
d0$Source[1]
for (con in unique(dat$concept)) {
d0 <- dat[concept==con, ]
cat(sprintf(template, d0$concept[1], d0$Description[1], d0$Source[1]))
}
?read_xlsx
library(heRmes)
library(readxl)
library(data.table)
library(glue)
?read_xlsx
meta <- lapply(tabs, function(x) read_xlsx(file, x, n_max=5))
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) read_xlsx(file, x, n_max=5))
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) read_xlsx(file, x, n_max=5))
View(meta)
meta$DCM_IsA
meta <- lapply(tabs, function(x) read_xlsx(file, x, n_max=5, col_names=FALSE))
meta$DCM_IsA
meta <- lapply(tabs, function(x)  t(read_xlsx(file, x, n_max=5, col_names=FALSE)))
meta$DCM_IsA
x = tabs[1]
x = tabs[[1]]
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[1,] <- r[2,]
View(d)
r[1,]
r[1,]
read_xlsx(file, x, n_max=5, col_names=FALSE)
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
View(r)
r[,1]
r[,1]
d[, (r[,1]) := r[,2]]
(r[,1])
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, (c(r[,1])) := r[,2]]
as.vector(r[,1])
as.vector(r[,1]$...1)
as.vector(r$...1)
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := r$...2]
d
View(d)
View(r)
lapply(r$...2, 1)
lapply(r$...2, \\1)
lapply(r$...2, function(x) x[[1]])
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
View(d)
library(heRmes)
library(readxl)
library(data.table)
library(glue)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
meta <- meta[concept==con]
library(heRmes)
library(readxl)
library(data.table)
library(glue)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
View(meta)
unique(dat$concept)
for (con in unique(dat$concept)) {
meta <- meta[concept==con]
d0   <- dat[concept==con]
str <- glue("## {meta$Title} \n
Definition: {meta$Definition}. \n
Reference: {meta$Reference}. \n
Terminologies: `{meta$Terminologies}`. \n
Search expressions: `{meta$`Search expressions`}`. \n
")
cat(str)
}
unique(dat$concept)
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
View(meta)
unique(dat$concept)
for (con in unique(dat$concept)[2]) {
meta <- meta[concept==con]
d0   <- dat[concept==con]
str <- glue("## {meta$Title} \n
Definition: {meta$Definition}. \n
Reference: {meta$Reference}. \n
Terminologies: `{meta$Terminologies}`. \n
Search expressions: `{meta$`Search expressions`}`. \n
")
cat(str)
}
for (con in unique(dat$concept)) {
meta <- meta[concept==con]
d0   <- dat[concept==con]
str <- glue("## {meta$Title} \n
Definition: {meta$Definition}. \n
Reference: {meta$Reference}. \n
Terminologies: `{meta$Terminologies}`. \n
Search expressions: `{meta$`Search expressions`}`. \n
")
cat(str)
}
for (con in unique(dat$concept)) {
meta <- meta[concept==con]
d0   <- dat[concept==con]
str <- glue("## {meta$Title} \n
Definition: {meta$Definition}. \n
Reference: {meta$Reference}. \n
Terminologies: `{meta$Terminologies}`. \n
Search expressions: `{meta$`Search expressions`}`. \n
")
cat(str)
}
library(heRmes)
library(readxl)
library(data.table)
library(glue)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
for (con in unique(dat$concept)) {
meta <- meta[concept==con]
d0   <- dat[concept==con]
str <- glue("## {meta$Title} \n
Definition: {meta$Definition}. \n
Reference: {meta$Reference}. \n
Terminologies: `{meta$Terminologies}`. \n
Search expressions: `{meta$`Search expressions`}`. \n
")
cat(str)
}
library(heRmes)
library(readxl)
library(data.table)
library(glue)
file <- "/Users/xx20081/Library/CloudStorage/OneDrive-SharedLibraries-VUMC/Shaffer, Lauren L - Phenotype Workstream/phenotyping_code_consensus/nih_cardiomyopathy_phenotyping_combined.xlsx"
tabs <- list(DCM_IsA                         = "DCM_IsA",
LVSD_IsA                        = "LVSD_IsA",
Myocardial_infarction           = "Myocardial_infarction",
Coronary_artery_bypass_grafting = "Coronary_artery_bypass_grafting",
Percutaneous_coronary_intervent = "Percutaneous_coronary_intervent",
Thrombolysis_coronary           = "Thrombolysis_coronary",
Congenital_heart_disease        = "Congenital_heart_disease",
Congenital_heart_procedure      = "Congenital_heart_procedure")
meta <- lapply(tabs, function(x) {
r <- read_xlsx(file, x, n_max=5, col_names=FALSE)
d <- data.table()
d[, r$...1 := lapply(r$...2, function(x) x[[1]])]
}) |> rbindlist(idcol="concept")
dat <- lapply(tabs, function(x) read_xlsx(file, x, skip=13)) |> rbindlist(idcol="concept")
cols <- c("QW","RTL","NS","LL","Concensus")
dat[, (cols) := lapply(.SD, function(x) as.numeric(!is.na(x))), .SDcols = cols]
for (con in unique(dat$concept)) {
m0 <- meta[concept==con]
d0 <- dat[concept==con]
str <- glue("## {m0$Title} \n
Definition: {m0$Definition}. \n
Reference: {m0$Reference}. \n
Terminologies: `{m0$Terminologies}`. \n
Search expressions: `{m0$`Search expressions`}`. \n
")
cat(str)
}
}
d0$signal_icon <- sapply(d0$signal, signal_icon)
signal_icon <- function(value) {
icons <- c(
"0" = "<span style='color: gray;'>&#9675;</span>",  # empty circle
"1" = "<span style='color: red;'>&#9680;</span>",   # 1/4 filled circle
"2" = "<span style='color: orange;'>&#9681;</span>", # 1/2 filled circle
"3" = "<span style='color: yellow;'>&#9682;</span>", # 3/4 filled circle
"4" = "<span style='color: green;'>&#9679;</span>"   # full circle
)
return(icons[as.character(value)])
}
d0$signal_icon <- sapply(d0$signal, signal_icon)
View(d0)
d0$signal_icon <- sapply(1:nrow(d0), signal_icon)
View(d0)
install.packages("irr")
dat[, kappa := kappam.fleiss(.SD), .SDcols = c("QW","RTL","NS","LL")]
